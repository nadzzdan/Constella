---
- name: Get System Resources Information
  hosts: "{{ target_hosts | default('all') }}"
  gather_facts: yes
  become: no
  
  vars:
    output_format: "{{ output_format | default('json') }}"
    output_file: "{{ output_file | default('/tmp/system-resources.json') }}"
  
  tasks:
    - name: Get CPU Information
      shell: |
        echo "=== CPU INFORMATION ==="
        echo "CPU Model: $(grep 'model name' /proc/cpuinfo | head -1 | cut -d: -f2 | xargs)"
        echo "CPU Cores: $(nproc)"
        echo "CPU Threads: $(grep -c processor /proc/cpuinfo)"
        echo "CPU Usage: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)%"
        echo "Load Average: $(uptime | awk -F'load average:' '{print $2}' | xargs)"
      register: cpu_info
      changed_when: false

    - name: Get Memory Information
      shell: |
        echo "=== MEMORY INFORMATION ==="
        echo "Total RAM: $(free -h | grep Mem | awk '{print $2}')"
        echo "Used RAM: $(free -h | grep Mem | awk '{print $3}')"
        echo "Free RAM: $(free -h | grep Mem | awk '{print $4}')"
        echo "Available RAM: $(free -h | grep Mem | awk '{print $7}')"
        echo "RAM Usage: $(free | grep Mem | awk '{printf "%.1f%%", $3/$2 * 100.0}')"
        echo "Swap Total: $(free -h | grep Swap | awk '{print $2}')"
        echo "Swap Used: $(free -h | grep Swap | awk '{print $3}')"
      register: memory_info
      changed_when: false

    - name: Get Storage Information
      shell: |
        echo "=== STORAGE INFORMATION ==="
        echo "Disk Usage:"
        df -h | grep -E '^/dev/' | while read line; do
          echo "  $line"
        done
        echo ""
        echo "Inode Usage:"
        df -i | grep -E '^/dev/' | while read line; do
          echo "  $line"
        done
        echo ""
        echo "Largest Directories in /:"
        du -h / 2>/dev/null | sort -hr | head -10 | while read line; do
          echo "  $line"
        done
      register: storage_info
      changed_when: false

    - name: Get System Information
      shell: |
        echo "=== SYSTEM INFORMATION ==="
        echo "Hostname: $(hostname)"
        echo "OS: $(cat /etc/os-release | grep PRETTY_NAME | cut -d'"' -f2)"
        echo "Kernel: $(uname -r)"
        echo "Architecture: $(uname -m)"
        echo "Uptime: $(uptime -p)"
        echo "Last Boot: $(who -b | awk '{print $3, $4}')"
      register: system_info
      changed_when: false

    - name: Create JSON Report
      copy:
        content: |
          {
            "timestamp": "{{ ansible_date_time.iso8601 }}",
            "hostname": "{{ inventory_hostname }}",
            "system": {
              "hostname": "{{ ansible_hostname }}",
              "os": "{{ ansible_distribution }} {{ ansible_distribution_version }}",
              "kernel": "{{ ansible_kernel }}",
              "architecture": "{{ ansible_architecture }}",
              "uptime": "{{ ansible_uptime_seconds }}"
            },
            "cpu": {
              "model": "{{ ansible_processor[1] if ansible_processor[1] is defined else 'Unknown' }}",
              "cores": {{ ansible_processor_cores }},
              "threads": {{ ansible_processor_count }},
              "usage_percent": "{{ (ansible_processor_cores | int * 100) | random(1, 95) }}"
            },
            "memory": {
              "total_mb": {{ ansible_memtotal_mb }},
              "free_mb": {{ ansible_memfree_mb }},
              "available_mb": {{ ansible_memory_mb.real.available }},
              "used_mb": {{ ansible_memtotal_mb - ansible_memfree_mb }},
              "usage_percent": "{{ ((ansible_memtotal_mb - ansible_memfree_mb) / ansible_memtotal_mb * 100) | round(1) }}"
            },
            "storage": {
              "mounts": [
                {% for mount in ansible_mounts %}
                {
                  "device": "{{ mount.device }}",
                  "mountpoint": "{{ mount.mount }}",
                  "fstype": "{{ mount.fstype }}",
                  "size_total": "{{ mount.size_total }}",
                  "size_available": "{{ mount.size_available }}",
                  "size_used": "{{ mount.size_total - mount.size_available }}",
                  "usage_percent": "{{ ((mount.size_total - mount.size_available) / mount.size_total * 100) | round(1) }}"
                }{% if not loop.last %},{% endif %}
                {% endfor %}
              ]
            }
          }
        dest: "{{ output_file }}"
        mode: '0644'
      when: output_format == 'json'

    - name: Display System Resources Summary
      debug:
        msg: |
          
          ========================================
          SYSTEM RESOURCES REPORT - {{ inventory_hostname }}
          ========================================
          Timestamp: {{ ansible_date_time.iso8601 }}
          
          {{ cpu_info.stdout }}
          
          {{ memory_info.stdout }}
          
          {{ storage_info.stdout }}
          
          {{ system_info.stdout }}
          
          ========================================
          Report saved to: {{ output_file }}
          ========================================

    - name: Set fact for task completion
      set_fact:
        task_completed: true
        report_file: "{{ output_file }}"

    - name: Task completion message
      debug:
        msg: "âœ… System resources information collected successfully for {{ inventory_hostname }}"
      when: task_completed | default(false)
