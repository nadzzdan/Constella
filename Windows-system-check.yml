---
- name: Windows System Resources Check
  hosts: "{{ target_hosts | default('all') }}"
  gather_facts: yes
  become: no
  
  tasks:
    - name: Get CPU Information
      win_shell: |
        Write-Host "=== CPU INFORMATION ==="
        $cpu = Get-WmiObject -Class Win32_Processor
        Write-Host "CPU Model: $($cpu.Name)"
        Write-Host "CPU Cores: $($cpu.NumberOfCores)"
        Write-Host "CPU Threads: $($cpu.NumberOfLogicalProcessors)"
        
        $cpuUsage = Get-Counter '\Processor(_Total)\% Processor Time' | Select-Object -ExpandProperty CounterSamples | Select-Object -ExpandProperty CookedValue
        Write-Host "CPU Usage: $([math]::Round($cpuUsage, 1))%"
        
        $loadAvg = Get-Counter '\System\Processor Queue Length' | Select-Object -ExpandProperty CounterSamples | Select-Object -ExpandProperty CookedValue
        Write-Host "Processor Queue Length: $([math]::Round($loadAvg, 2))"
      register: cpu_info
      changed_when: false

    - name: Get Memory Information
      win_shell: |
        Write-Host "=== MEMORY INFORMATION ==="
        $memory = Get-WmiObject -Class Win32_ComputerSystem
        $totalRAM = [math]::Round($memory.TotalPhysicalMemory / 1GB, 2)
        Write-Host "Total RAM: ${totalRAM}GB"
        
        $os = Get-WmiObject -Class Win32_OperatingSystem
        $usedRAM = [math]::Round(($os.TotalVisibleMemorySize - $os.FreePhysicalMemory) * 1024 / 1GB, 2)
        $freeRAM = [math]::Round($os.FreePhysicalMemory * 1024 / 1GB, 2)
        Write-Host "Used RAM: ${usedRAM}GB"
        Write-Host "Free RAM: ${freeRAM}GB"
        
        $ramUsage = [math]::Round(($usedRAM / $totalRAM) * 100, 1)
        Write-Host "RAM Usage: ${ramUsage}%"
      register: memory_info
      changed_when: false

    - name: Get Storage Information
      win_shell: |
        Write-Host "=== STORAGE INFORMATION ==="
        Write-Host "Disk Usage:"
        Get-WmiObject -Class Win32_LogicalDisk | ForEach-Object {
          $sizeGB = [math]::Round($_.Size / 1GB, 2)
          $freeGB = [math]::Round($_.FreeSpace / 1GB, 2)
          $usedGB = $sizeGB - $freeGB
          $usagePercent = [math]::Round(($usedGB / $sizeGB) * 100, 1)
          Write-Host "  Drive $($_.DeviceID): $sizeGB GB total, $usedGB GB used, $freeGB GB free ($usagePercent% used)"
        }
      register: storage_info
      changed_when: false

    - name: Get System Information
      win_shell: |
        Write-Host "=== SYSTEM INFORMATION ==="
        $computer = Get-WmiObject -Class Win32_ComputerSystem
        Write-Host "Hostname: $($computer.Name)"
        Write-Host "OS: $($computer.Caption) $($computer.OSArchitecture)"
        Write-Host "Manufacturer: $($computer.Manufacturer)"
        Write-Host "Model: $($computer.Model)"
        
        $os = Get-WmiObject -Class Win32_OperatingSystem
        Write-Host "Kernel: $($os.Version)"
        Write-Host "Last Boot: $($os.ConvertToDateTime($os.LastBootUpTime))"
        
        $uptime = (Get-Date) - $os.ConvertToDateTime($os.LastBootUpTime)
        Write-Host "Uptime: $($uptime.Days) days, $($uptime.Hours) hours, $($uptime.Minutes) minutes"
      register: system_info
      changed_when: false

    - name: Display Complete System Report
      debug:
        msg: |
          
          ========================================
          WINDOWS SYSTEM RESOURCES - {{ inventory_hostname }}
          ========================================
          Timestamp: {{ ansible_date_time.iso8601 }}
          
          {{ cpu_info.stdout }}
          
          {{ memory_info.stdout }}
          
          {{ storage_info.stdout }}
          
          {{ system_info.stdout }}
          
          ========================================
          Windows system check completed successfully!
          ========================================
